# pipeline adapted from - 
# https://github.com/rust-lang/rust-analyzer/blob/master/.github/workflows/ci.yaml
name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_INCREMENTAL: 0
  CARGO_NET_RETRY: 10
  RUST_BACKTRACE: short
  RUSTFLAGS: "-D warnings"

jobs:
  test:
    name: Test
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    
    - name: Install Rust toolchain
      run: |
        rustup update --no-self-update stable
        rustup component add rustfmt rust-src

    - name: Cache dependencies
      uses: Swatinem/rust-cache@v2

    - name: Compile (all features)
      run: cargo test --all-features --no-run --locked

    - name: Run tests (all features)
      run: cargo test --all-features -- --test-threads=1

    - name: Compile (no fetures)
      run: cargo test --no-run --locked

    - name: Run tests (no features)
      run: cargo test -- --test-threads=1

  rust-cross:
    name: Rust Cross
    runs-on: ubuntu-latest
    
    env:
      targets: "aarch64-unknown-linux-gnu x86_64-apple-darwin x86_64-pc-windows-gnu x86_64-pc-windows-msvc x86_64-unknown-linux-gnu"       
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    
    - name: Install Rust toolchain
      run: |
        rustup update --no-self-update stable
        rustup target add ${{ env.targets }}

    - name: Cache Dependencies
      uses: Swatinem/rust-cache@v2

    - name: Check (no features)
      run: |
        for target in ${{ env.targets }}; do
          cargo check --target=$target --all-targets
        done

    - name: Check (all features)
      run: |
        for target in ${{ env.targets }}; do
          cargo check --all-features --target=$target --all-targets
        done
  
  fmt:
    name: Fmt
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    
    - name: Install Rust toolchain
      run: |
        rustup update --no-self-update stable
        rustup component add rustfmt
    
    - name: Cache Dependencies
      uses: Swatinem/rust-cache@v2

    - name: Check formatting
      run: cargo fmt --all -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    
    - name: Install Rust toolchain
      run: |
        rustup update --no-self-update stable
        rustup component add clippy
    
    - name: Cache Dependencies
      uses: Swatinem/rust-cache@v2

    - name: Lint code
      run: cargo clippy -- -D warnings
